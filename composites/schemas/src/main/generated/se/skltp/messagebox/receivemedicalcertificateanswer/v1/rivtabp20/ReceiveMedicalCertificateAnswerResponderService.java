
/*
 * 
 */

package se.skltp.messagebox.receivemedicalcertificateanswer.v1.rivtabp20;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.0
 * Wed Sep 11 11:15:54 CEST 2013
 * Generated source version: 2.3.0
 * 
 */


@WebServiceClient(name = "ReceiveMedicalCertificateAnswerResponderService", 
                  wsdlLocation = "file:/Users/matsolsson/Callista/inera-message/composites/schemas/src/main/resources/schemas/interactions/ReceiveMedicalCertificateAnswerInteraction/ReceiveMedicalCertificateAnswerInteraction_1.0_rivtabp20.wsdl",
                  targetNamespace = "urn:riv:insuranceprocess:healthreporting:ReceiveMedicalCertificateAnswer:1:rivtabp20") 
public class ReceiveMedicalCertificateAnswerResponderService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:riv:insuranceprocess:healthreporting:ReceiveMedicalCertificateAnswer:1:rivtabp20", "ReceiveMedicalCertificateAnswerResponderService");
    public final static QName ReceiveMedicalCertificateAnswerResponderPort = new QName("urn:riv:insuranceprocess:healthreporting:ReceiveMedicalCertificateAnswer:1:rivtabp20", "ReceiveMedicalCertificateAnswerResponderPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/matsolsson/Callista/inera-message/composites/schemas/src/main/resources/schemas/interactions/ReceiveMedicalCertificateAnswerInteraction/ReceiveMedicalCertificateAnswerInteraction_1.0_rivtabp20.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/Users/matsolsson/Callista/inera-message/composites/schemas/src/main/resources/schemas/interactions/ReceiveMedicalCertificateAnswerInteraction/ReceiveMedicalCertificateAnswerInteraction_1.0_rivtabp20.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ReceiveMedicalCertificateAnswerResponderService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ReceiveMedicalCertificateAnswerResponderService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ReceiveMedicalCertificateAnswerResponderService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ReceiveMedicalCertificateAnswerResponderService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }
    public ReceiveMedicalCertificateAnswerResponderService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ReceiveMedicalCertificateAnswerResponderService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ReceiveMedicalCertificateAnswerResponderInterface
     */
    @WebEndpoint(name = "ReceiveMedicalCertificateAnswerResponderPort")
    public ReceiveMedicalCertificateAnswerResponderInterface getReceiveMedicalCertificateAnswerResponderPort() {
        return super.getPort(ReceiveMedicalCertificateAnswerResponderPort, ReceiveMedicalCertificateAnswerResponderInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ReceiveMedicalCertificateAnswerResponderInterface
     */
    @WebEndpoint(name = "ReceiveMedicalCertificateAnswerResponderPort")
    public ReceiveMedicalCertificateAnswerResponderInterface getReceiveMedicalCertificateAnswerResponderPort(WebServiceFeature... features) {
        return super.getPort(ReceiveMedicalCertificateAnswerResponderPort, ReceiveMedicalCertificateAnswerResponderInterface.class, features);
    }

}
